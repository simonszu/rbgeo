<%
firstlogyear = Time.at(Gcache.order(:logdate).first.logdate).year
lastlogyear = Time.at(Gcache.order(logdate: :desc).first.logdate).year
logyears = years_between(firstlogyear, lastlogyear)

# First Dimension is years, second dimension is month
matrix = Array.new(logyears.length) {Array.new(12)}

# Init the matrix
for i in 0..matrix.length-1
  for j in 0..matrix[0].length-1
    matrix[i][j] = 0
  end
end

Gcache.where('found = ?', 1).each do |cache|
	i = (Time.at(cache.logdate).year)-firstlogyear
	j = (Time.at(cache.logdate).month)-1
	matrix[i][j] += 1
end

# Calculate the sums
gesamtyearsum = Array.new
gesamtmonthsum = Array.new
for i in 0..matrix.length-1
  gesamtyearsum.push(matrix[i].reduce(:+))
end
newmatrix = matrix.transpose
for i in 0..newmatrix.length-1
  gesamtmonthsum.push(newmatrix[i].reduce(:+))
end

# Calculate some values for the gradients
# Matrix
maxvalue = matrix.flatten.max
minvalue = matrix.flatten.select{|item| item > 0}.min
g = Gradient.new(GRADIENT_FIRST_COLOR, GRADIENT_SECOND_COLOR, (maxvalue-minvalue))
# Rowsums
rmaxvalue = gesamtyearsum.max
rminvalue = gesamtyearsum.select{|item| item > 0}.min
rg = Gradient.new(GRADIENT_FIRST_COLOR, GRADIENT_SECOND_COLOR, (rmaxvalue-rminvalue))
# Colsums
cmaxvalue = gesamtmonthsum.max
cminvalue = gesamtmonthsum.select{|item| item > 0}.min
cg = Gradient.new(GRADIENT_FIRST_COLOR, GRADIENT_SECOND_COLOR, (cmaxvalue-cminvalue))

%>
<h4>Funde nach Monaten (Matrix)</h4>
<table class="table table-bordered table-condensed">
<tr><td></td><td colspan="12" align="center"><strong>Monat</strong></td><td></td></tr>
<tr><td><strong>Jahr</strong></td><td><strong>Jan</strong></td><td><strong>Feb</strong></td><td><strong>Mar</strong></td><td><strong>Apr</strong></td><td><strong>Mai</strong></td><td><strong>Jun</strong></td><td><strong>Jul</strong></td><td><strong>Aug</strong></td><td><strong>Sept</strong></td><td><strong>Okt</strong></td><td><strong>Nov</strong></td><td><strong>Dez</strong></td><td><strong>Gesamt</strong></td></tr>
<% logyears.each do |year| %>
<tr><td><strong><%= year.strftime('%Y') %></strong></td>
<% 12.times do |month| %>
<td
<% if matrix[(year.strftime('%Y').to_i)-firstlogyear][month] > 0 %>
bgcolor = "#<%= g.gradient(matrix[(year.strftime('%Y').to_i)-firstlogyear][month]-minvalue).to_s(16) %>"
<% end %>
><%= matrix[(year.strftime('%Y').to_i)-firstlogyear][month] %></td>
<% end %>
<td
<% if gesamtyearsum[(year.strftime('%Y').to_i)-firstlogyear] > 0 %>
bgcolor = "#<%= rg.gradient(gesamtyearsum[(year.strftime('%Y').to_i)-firstlogyear]-rminvalue).to_s(16) %>"
<% end %>
><%= gesamtyearsum[(year.strftime('%Y').to_i)-firstlogyear] %></td>
</tr>
<% end %>
<tr>
<td><strong>Gesamt</strong></td>
<% 12.times do |month| %>
<td
<% if gesamtmonthsum[month] > 0 %>
bgcolor = "#<%= cg.gradient(gesamtmonthsum[month]-cminvalue).to_s(16) %>"
<% end %>
><%= gesamtmonthsum[month] %></td>
<% end %>
</tr>
</table>
<center>In <strong><%= matrix.flatten.select{|item| item > 0}.length %></strong> von <%= matrix.flatten.length %> m√∂glichen Monaten cachen gewesen. (<%= percent(matrix.flatten.select{|item| item > 0}.length, matrix.flatten.length) %>%).</center>