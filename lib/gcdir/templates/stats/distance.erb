<h4>Funde nach Entfernung</h4>
<%
  distances = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  distlabels = ["0-10 km", "11-20 km", "21-30 km", "31-40 km", "41-50 km", "51-100 km", "101-200 km", "201-500 km", "501-1000 km", ">1000 km"]
  home_coords = [simplify_coords(home_lat), simplify_coords(home_lon)]
  Cache.where(found: "1").each do |cache|
    cache_coords = [simplify_coords(cache.coords_lat), simplify_coords(cache.coords_lon)]
    distance = (coord_distance(home_coords, cache_coords)/1000).round(0)
    case distance
    when 1..10
      distances[0] = distances[0].next
    when 11..20
      distances[1] = distances[1].next
    when 21..30
      distances[2] = distances[2].next
    when 31..40
      distances[3] = distances[3].next
    when 41..50
      distances[4] = distances[4].next
    when 51..100
      distances[5] = distances[5].next
    when 101..200
      distances[6] = distances[6].next
    when 201..500
      distances[7] = distances[7].next
    when 501..1000
      distances[8] = distances[8].next
    else
      distances[9] = distances[9].next
    end
  end

# Calculate some values for the gradients
g = Gradient.new(GRADIENT_FIRST_COLOR, GRADIENT_SECOND_COLOR, Cache.all.length)
%>
<table class="table table-condensed">
  <tr>
    <th>Entfernung</th>
    <th>Anzahl</th>
  </tr>
  <% distances.each_with_index do |distance, index| %>
  <tr>
    <td><%= distlabels[index] %></td>
     <td
    <% if distance > 0 %>
    bgcolor = "#<%= g.gradient(distance).to_s(16) %>"
    <% end %>
    ><%= distance %> (<%= percent(distance, Cache.where(found: "1").length) %>%)</td>
  </tr>
  <% end %>
</table>